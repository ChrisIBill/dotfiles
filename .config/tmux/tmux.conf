set -g prefix C-a
unbind C-b
bind C-a send-prefix

set -g pane-border-status top
set -g pane-border-format '#[bold] [#{pane_index}] [#{pane_current_command}]'
# set -g pane-border-lines single

set -g mode-keys vi
set -g status-keys vi

# Mouse controls
set -g mouse on

set-option -g history-limit 10000

#sets base index of panes and windows
set -g base-index 1
setw -g pane-base-index 1

#renumber windows when a window is closed
set -g renumber-windows on

# Neovim request
set-option -sg escape-time 10
set-option -g focus-events on

# True-Color support
set-option -sa terminal-features ',alacritty*:RGB'
set-option -g default-terminal "screen-256color"
# Remapping pane movement to vi-like keys
bind-key -r -T prefix h select-pane -L
bind-key -r -T prefix j select-pane -D
bind-key -r -T prefix k select-pane -U
bind-key -r -T prefix l select-pane -R
bind-key -T prefix b last-window

# Remapping pane split
bind-key v split-window -v -c "#{pane_current_path}"
bind-key V split-window -fv -c "#{pane_current_path}"
bind-key b split-window -h -c "#{pane_current_path}"
bind-key B split-window -fh -c "#{pane_current_path}"

# Mapping session setting
bind-key -r -T prefix C-s new-session -d
# Neovim integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'


# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"

#Jump to marked pane
bind \` switch-client -t'{marked}'

# Reload tmux config
bind e source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
